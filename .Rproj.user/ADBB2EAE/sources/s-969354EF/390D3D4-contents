library(rlang)

# how can you use metaprogramming to generate sql without using paste or glue?
#  why is metaprogramming a better approach for sql injections? 
# what is the cost computationally to be defining a data mask/environment for each run of tidy pipeline?
# if you use a quosure with a data mask where the column is the same as a global environment object name, what happens?

f <- expr(f(x = 1, y = 2))

# Add a new argument
f$z <- 3
f
#> f(x = 1, y = 2, z = 3)

# Or remove an argument:
f[[2]] <- NULL
f
#> f(y = 2, z = 3)

lobstr::ast(f1(f2(a, b), f3(1, f4(2))))
#> █─f1 
#> ├─█─f2 
#> │ ├─a 
#> │ └─b 
#> └─█─f3 
#>   ├─1 
#>   └─█─f4 
#>     └─2

cv <- function(var) {
  var <- enexpr(var)
  expr(sd(!!var) / mean(!!var))
}

x = 20
y = 100

cv(x)
#> sd(x)/mean(x)
lobstr::ast(cv(x + y))
#> sd(x + y)/mean(x + y)

mtcars_db %>%
  filter(cyl > 2) %>%
  select(mpg:hp) %>%
  head(10) %>%
  show_query()

mpg %>%
  drop_na() %>%
  filter(cty > 25) %>% 
    ggplot(., aes(cty)) +
      geom_bar() +
      labs(title = max(.data$hwy))


mpg %>%
  rename_with(~ "Country", contains("model")) %>%
  View()

df %>%
  mutate(date = case_when(
    !is.na(lubridate::ymd(date)) ~ lubridate::ymd(date),
           TRUE ~ lubridate::mdy(date)))
    

lubridate::ymd('10-21-1989')

